{"version":3,"sources":["views/Home/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["tabList","id","title","component","SubMoudle","com","Components","React","lazy","fallback","Moudle","memo","Home","useState","tabIndex","setTabIndex","tabContent","setTabContent","top","settop","change","index","className","map","item","onClick","src","alt","style","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAcIA,EAAU,CACV,CACIC,GAAI,EACJC,MAAO,OACPC,UAZc,kBAAM,+BAcxB,CACIF,GAAI,EACJC,MAAO,QACPC,UAhBe,kBAAM,+BAkBzB,CACIF,GAAI,EACJC,MAAO,QACPC,UApBe,kBAAM,+BAsBzB,CACIF,GAAI,EACJC,MAAO,QACPC,UAxBe,kBAAM,+BA0BzB,CACIF,GAAI,EACJC,MAAO,QACPC,UA5Be,kBAAM,gCAkC7B,SAASC,EAAT,GAA8B,IAARC,EAAO,EAAPA,IAEdC,EAAaC,IAAMC,MAAK,kBAAMH,OAElC,OAAO,mCACH,cAAC,WAAD,CAAUI,SAAU,KAApB,SACI,cAACH,EAAD,QAKZ,IAAII,EAASC,eAAKP,GA8CHQ,MA7Cf,WAAkB,IAAD,EACiBC,mBAAS,GAD1B,mBACRC,EADQ,KACEC,EADF,OAEqBF,mBAASb,EAAQc,IAFtC,mBAERE,EAFQ,KAEIC,EAFJ,OAGOJ,mBAAS,UAHhB,mBAGRK,EAHQ,KAGHC,EAHG,KAIPC,EAAS,SAACC,GACZN,EAAYM,GACZJ,EAAcjB,EAAQqB,IACtBF,EAAO,WAKX,OAAO,mCACH,sBAAKG,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SAEQtB,EAAQuB,KAAI,SAAAC,GACR,OAAO,qBAAmBF,UAAWE,EAAKvB,KAAOa,EAAW,uBAAwB,WAAYW,QAAS,WAAOL,EAAOI,EAAKvB,KAArH,SACEuB,EAAKtB,OADGsB,EAAKvB,SAMlC,sBAAKqB,UAAU,gBAAf,UACI,+BAAON,EAAU,QACjB,sBAAMS,QAAS,WAfvBN,EAAO,SAe+BG,UAAU,OAAxC,SACI,qBAAKI,IAAI,wGAAwGC,IAAI,OAEzH,qBAAKL,UAAU,wBAAwBM,MAAO,CAACV,IAAKA,GAApD,SAEIlB,EAAQuB,KAAI,SAAAC,GACR,OAAO,qBAAmBF,UAAWE,EAAKvB,KAAOa,EAAW,4BAA6B,gBAAiBW,QAAS,WAAOL,EAAOI,EAAKvB,KAA/H,SACFuB,EAAKtB,OADOsB,EAAKvB,YAOlC,qBAAKqB,UAAU,cAAf,SACI,cAACZ,EAAD,CAAQL,IAAKW,EAAWb,oBCrFzB0B,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,OCOSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ffa1fda3.chunk.js","sourcesContent":["import React, {useState, Suspense, useEffect, memo} from \"react\";\nimport \"./index.css\";\n\n\n\n\nconst TextComponent = () => import(\"../../component/Text\");\nconst ImageComponent = () => import(\"../../component/Image\");\nconst VideoComponent = () => import(\"../../component/Video\");\nconst TableComponent = () => import(\"../../component/Table\");\nconst EmailComponent = () => import(\"../../component/Email\");\n\n\n\nlet tabList = [\n    {\n        id: 0,\n        title: \"Text\",\n        component: TextComponent\n    },\n    {\n        id: 1,\n        title: \"Image\",\n        component: ImageComponent\n    },\n    {\n        id: 2,\n        title: \"Video\",\n        component: VideoComponent\n    },\n    {\n        id: 3,\n        title: \"Table\",\n        component: TableComponent\n    },\n    {\n        id: 4,\n        title: \"Email\",\n        component: EmailComponent\n    }\n]\n\n\n\nfunction SubMoudle ({ com }) {\n    \n    let Components = React.lazy(() => com());\n    \n    return <>\n        <Suspense fallback={null}>\n            <Components/>\n        </Suspense>\n    </>\n}\n\nlet Moudle = memo(SubMoudle)\nfunction Home () {\n    let [tabIndex, setTabIndex] = useState(0)\n    let [tabContent, setTabContent] = useState(tabList[tabIndex])\n    let [top, settop] = useState(\"-30rem\")\n    const change = (index) => {\n        setTabIndex(index)\n        setTabContent(tabList[index])\n        settop(\"-30rem\")\n    }\n    const drown = () => {\n        settop(\"4rem\")\n    }\n    return <>\n        <div className=\"tab-container\">\n            <div className=\"tab-header\">\n                {\n                    tabList.map(item => {\n                        return <div key={item.id} className={item.id === tabIndex ? \"tab-item tab-checked\": \"tab-item\"} onClick={() => {change(item.id)}}>\n                                {item.title}\n                        </div>\n                    })\n                }\n            </div>\n            <div className=\"tab-down-menu\">\n                <span>{tabContent[\"title\"]}</span>\n                <span onClick={() => drown()} className=\"drop\">\n                    <img src=\"https://alipic.lanhuapp.com/SketchPng4ed40ec7e55775405d6053e95598c9abe1f0c8a6a1df0c47e2e929bf3c231966\" alt=\"\"/>\n                </span>\n                <div className=\"tab-down-menu-content\" style={{top: top}}>\n                {\n                    tabList.map(item => {\n                        return <div key={item.id} className={item.id === tabIndex ? \"tab-menu-item tab-checked\": \"tab-menu-item\"} onClick={() => {change(item.id)}}>\n                            {item.title}\n                        </div>\n                    })\n                }\n                </div>\n            </div>\n            <div className=\"tab-content\">\n                <Moudle com={tabContent.component}/>\n            </div>\n        </div>\n    </>\n}\n\nexport default Home;","import './App.css';\nimport Home from \"./views/Home\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}